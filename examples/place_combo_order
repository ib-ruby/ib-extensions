#!/usr/bin/env ruby
#
# =============================
# DO ONLY RUN ON A DEMO ACCOUNT
#
# This script places a combo order:  Buy Microsoft, sell WellsFarge 
# 
# The first Account (IB::Gateway.clients.first) is used.
#
#
# DO ONLY RUN ON A DEMO ACCOUNT
# =============================
#
require 'bundler/setup'
require 'ib-gateway'
require 'ib/order-prototypes'
require 'ib/spread-prototypes'
require 'ib/market-price'


# 
# First, connect to IB TWS. Arbitrary :client_id is used to identify your script
g = IB::Gateway.new :client_id => 1112 do | gw | #, :port => 7497 # TWS

# Subscribe to TWS alerts/errors and order-related messages
	gw.tws.subscribe(:Alert, :OpenOrder, :OrderStatus) { |msg| puts msg.to_human }
end

# if tws/gateway is ready
g.tws.wait_for :NextValidId

# create the bag
# only US-Stocks are allowed by IB
the_bag = IB::StockSpread.fabricate 'MSFT', 'WFC', ratio: [1, -8]  

puts "Market price for Microsoft/WellsFargo Combo: #{the_market_price = the_bag.market_price}"

if the_market_price.nil?
	puts "No marketdata received, using  default (10 $) "
	the_market_price = 14
end
# use the order-prototype to create the order
order = IB::Combo.order total_quantity: 10, 
                        limit_price: the_market_price,
                        action: :buy
		
# calculate margin impact
impact= g.clients.first.preview order: order, contract: the_bag

puts "Preview:: Margin Impact"
puts impact #map{ |x,y| "#{ x }: #{ y.blank? ? '---' ?  y.to_f }" unless x == :created_at }.join("; ")



# and place
if g.clients.first.test_environment?
	local_id = g.clients.first.place_order order: order

	g.tws.wait_for [:OpenOrder, 3], [:OrderStatus, 2]

else
	puts "Order not placed. #{G.clients.first.to_human} is not a demo account"
end
#puts "\n******** Press <Enter> to cancel... *********\n\n"
#STDIN.gets

=begin
Expected output 

=end
